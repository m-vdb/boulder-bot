# This workflow will install Python dependencies, run chatbot tests

name: Chatbot tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Train and test model
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install poetry
        run: |
          python -m pip install poetry
          poetry config virtualenvs.in-project true
      - name: Set up cache
        uses: actions/cache@v1
        with:
          path: .venv
          key: venv-${{ runner.os }}-3.7-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: |
          poetry install
          poetry run python -m spacy download en_core_web_md
          poetry run python -m spacy link en_core_web_md en --force
      - name: Test chatbot
        run: |
          poetry run rasa train --fixed-model-name new_model
          poetry run rasa test --fail-on-prediction-errors --quiet -s tests/test_stories.md

      - uses: actions/upload-artifact@v2
        with:
          name: trained-model
          path: ./models/new_model.tar.gz

  deploy:
    name: Deploy new model to Rasa X
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: ubuntu-latest

      - name: Upload model
        env:
          RASA_X_DOMAIN: ${{ secrets.RASA_X_DOMAIN }}
          RASA_X_API_TOKEN: ${{ secrets.RASA_X_API_TOKEN }}
        run: curl -k -F "model=@new_model.tar.gz" "https://$RASA_X_DOMAIN/api/projects/default/models?api_token=$RASA_X_API_TOKEN"
